@mixin spacerValue($name,$media) {
	@for $i from 0 through 20 {
		$prx: $i * $spacer;
		$num: $i * $spacer_em + rem;
		$siz: 0;

		@if $i == 0 {
			$siz: $num !important;
		} @else {
			$siz: $num;
		}

		&-#{$prx}#{$media} {
			#{$name}:  $siz;
		}
		
		&h-#{$prx}#{$media} {
			#{$name}-left:  $siz;
			#{$name}-right:  $siz;
		}

		&v-#{$prx}#{$media} {
			#{$name}-top:  $siz;
			#{$name}-bottom:  $siz;
		}

		&t-#{$prx}#{$media} {
			#{$name}-top:  $siz;
		}

		&b-#{$prx}#{$media} {
			#{$name}-bottom:  $siz;
		}

		&l-#{$prx}#{$media} {
			#{$name}-left:  $siz;
		}

		&r-#{$prx}#{$media} {
			#{$name}-right:  $siz;
		}
	}

	&l-auto#{$media}{
		margin-left: auto;
	}
	&r-auto#{$media}{
		margin-right: auto;
	}
	&t-auto#{$media}{
		margin-top: auto;
	}
	&b-auto#{$media}{
		margin-bottom: auto;
	}
	&v-auto#{$media}{
		margin-top: auto;
		margin-bottom: auto;
	}
	&h-auto#{$media}{
		margin-left: auto;
		margin-right: auto;
	}
}


@mixin spacer($prefix, $name) {
	.cn-#{$prefix}{
		@include spacerValue($name,null);
	}

	@each $break, $min, $max in $breakpoints_min_max {

		@include mediaMinMax($min, $max){
			.cn-#{$prefix}{
				@include spacerValue($name,'Mx_#{$break}');
			}
		}
		
	}

}

@mixin mediaMinMax($min, $max) {
	@if $max {
		@media (max-width: $max) { @content; }
	}
	@else if $min{
		//@media (min-width: $min) { @content; }
	}
	@else{
		@content; 
	}
}

@mixin mediaGrow($max) {
	@if $max{
		@media (max-width: $max) { @content; }
	}
	@else {
		@media (min-width: 1200px) { @content; }
	}
}

